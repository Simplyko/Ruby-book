=begin 
Пользователь выбрал определенное количество футбольных мячей, мячей для тенниса, и мячей для гольфа.
Написать метод, который считает общий вес. 

def total_weight(options={})
	a = options[:soccer_ball_count] || 0
	b = options[:tennis_ball_count] || 0
	c = options[:golf_ball_count] || 0
	puts (a * 410) + (b * 58) + (c * 45) + 29
end

total_weight( soccer_ball_count: 3, tennis_ball_count: 2, golf_ball_count: 1 )
=end

=begin
Задание: Центр Управления Полетами поручил вам задание написать метод “launch” (от англ. “запуск”),
который будет принимать набор опций в виде хеша и отправлять в космос астронавтов “Белку” и/или “Стрелку”.
Метод должен принимать следующие параметры:

`angle` - угол запуска ракеты. Если не задан, то значение по-умолчанию равно 90 (градусов)
`astronauts` - массив символов (:belka, :strelka), если не задан, то в космос нужно отправлять и Белку, и Стрелку.
`delay` - количество секунд через которые запустить ракету, если не задано, то равно пяти

Метод должен вести подсчет оставшихся до запуска секунд (например: “Осталось секунд: 5 4 3 2 1”). 
После истечения задержки, метод должен выводить сообщение о том, какой астронавт (астронавты) запущены, а также под каким углом была запущена ракета. 
Метод может принимать любое количество параметров (ноль, один, два, три). Возможные варианты вызова метода:

`launch`
`launch(angle: 91)`
`launch(delay: 3)`
`launch(delay: 3, angle: 91)`
`launch(astronauts: [:belka])`
и т.д. 
=end

def launch(options={})
	x = options[:angle] || 90
	y = options[:astronauts] || [:belka, :strelka]
	z = options[:delay] || 5
	
	print 'До запуска осталось'
	z.downto(0) do |i|
		print " #{i} "
	end
	puts
	puts "Запуск под углом: #{x}; С Астронавтами( #{y} ) на борту;"
end

launch
launch(angle: 91)
launch(delay: 3)
launch(delay: 3, angle: 91)
launch(astronauts: [:belka])
